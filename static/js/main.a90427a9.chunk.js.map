{"version":3,"sources":["editable-stuff/pfp.png","editable-stuff/config.js","components/MainBody.jsx","components/AboutMe.jsx","components/ProjectCard.jsx","components/Projects.jsx","hooks/useIsomorphicLayoutEffect.js","hooks/useScrollPosition.js","hooks/useResizeObserver.js","components/Navbar.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","mainBody","gradientColors","firstName","lastName","message","icons","image","url","about","heading","imageLink","require","imageSize","repos","gitHubUsername","contact","MainBody","React","forwardRef","ref","gradient","title","Jumbotron","fluid","id","style","background","backgroundSize","className","Container","fontFamily","fontWeight","map","icon","index","key","target","rel","href","aria-label","split","left","bottom","pictureLinkRegex","RegExp","AboutMe","link","imgSize","useState","profilePicUrl","setProfilePicUrl","Boolean","showPic","setShowPic","useEffect","test","a","axios","get","response","data","graphql","user","profile_pic_url_hd","console","error","src","alt","width","height","CardButtons","svn_url","Language","languages_url","repo_url","setData","handleRequest","useCallback","array","total_count","push","length","language","Math","trunc","CardFooter","star_count","pushed_at","updated_at","setUpdated_at","handleUpdatetime","date","Date","diff","getTime","hours","measurement","toString","time","Intl","DateTimeFormat","day","month","year","format","ProjectCard","value","name","description","stargazers_count","Col","md","Card","Body","Title","as","Text","count","Projects","username","projectsArray","setProjectsArray","fetchRepos","repoList","allRepos","repo","find","Row","project","useIsomorphicLayoutEffect","window","useLayoutEffect","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","top","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps","useResizeObserver","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Navigation","props","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","navbarDimensions","navBottom","offsetTop","Navbar","expand","Brand","Toggle","aria-controls","color","class","Collapse","Nav","Link","Contact","email","discord","Home","App","titleRef","basename","path","exact","component","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,iC,mGCArCC,EAAW,CAChBC,eAAgB,qCAChBC,UAAW,SACXC,SAAU,WACVC,QAAS,2CACTC,MAAO,CACN,CAAEC,MAAO,YAAaC,IAAK,0CAC3B,CAAED,MAAO,aAAcC,IAAK,gDAC5B,CAAED,MAAO,aAAcC,IAAK,iCAIxBC,EAAQ,CACbC,QAAS,WACTC,UAAWC,EAAQ,IACnBC,UAAW,IACXR,QAAS,qLAGJS,EAAQ,CACbJ,QAAS,qBACTK,eAAgB,qBAChBD,MAAO,CAAC,cAAe,qBAAsB,WAAY,kBAGpDE,EACI,UADJA,EAEI,oDAFJA,EAGE,oBAHFA,EAII,uB,iCCOKC,EA/BEC,IAAMC,YACtB,WAAsCC,GAAS,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOjB,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAC5B,OACC,kBAACiB,EAAA,EAAD,CACCC,OAAK,EACLC,GAAG,OACHC,MAAO,CAAEC,WAAW,2BAAD,OAA6BN,EAA7B,KAA0CO,eAAgB,eAC7EC,UAAU,mHAEV,yBAAKJ,GAAG,UACR,kBAACK,EAAA,EAAD,CAAWD,UAAU,eACpB,wBAAIH,MAAO,CAAEK,WAAY,CAAC,aAAc,cAAeC,WAAY,KAAOZ,IAAKA,EAAKS,UAAU,aAAaP,GAC3G,kBAAC,IAAD,CAAQI,MAAO,CAAEK,WAAY,CAAC,aAAc,cAAeC,WAAY,KAAOH,UAAU,kBAAkB,IAAKxB,GAC/G,yBAAKwB,UAAU,OACbvB,EAAM2B,KAAI,SAACC,EAAMC,GAAP,OACV,uBACCC,IAAG,sBAAiBD,GACpBE,OAAO,SACPC,IAAI,sBACJC,KAAML,EAAK1B,IACXgC,aAAA,aAAkBN,EAAK3B,MAAMkC,MAAM,KAAK,KACxC,uBAAGZ,UAAS,cAASK,EAAK3B,MAAd,6BAGf,uBAAGmB,MAAO,CAAEgB,KAAM,EAAGC,OAAQ,GAAKd,UAAU,2E,iDC1B3Ce,EAAmB,IAAIC,OAAO,2FAkDrBC,EAhDC,SAAC,GAAyC,IAAvCpC,EAAsC,EAAtCA,QAASL,EAA6B,EAA7BA,QAAS0C,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACd9B,IAAM+B,SAAS,IADD,mBACjDC,EADiD,KAClCC,EADkC,OAE1BjC,IAAM+B,SAASG,QAAQL,IAFG,mBAEjDM,EAFiD,KAExCC,EAFwC,KAsBxD,OAlBApC,IAAMqC,WAAU,WACXR,IAASH,EAAiBY,KAAKT,GAClC,sBAAC,4BAAAU,EAAA,4DACkB,6BACC,UAFnB,kBAIwBC,IAAMC,IAHZ,6BAG4BZ,EAF3B,WAFnB,OAIOa,EAJP,OAKCT,EAAiBS,EAASC,KAAKC,QAAQC,KAAKC,oBAL7C,gDAOCV,GAAW,GACXW,QAAQC,MAAM,KAAM7D,SARrB,wDAAD,GAYA8C,EAAiBJ,KAEhB,CAACA,IAGH,yBAAKtB,GAAG,UAAUI,UAAU,iCAC3B,yBAAKA,UAAU,6BACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,6CACbwB,GACA,yBACCxB,UAAU,yCACVsC,IAAKjB,EACLkB,IAAI,iBACJC,MAAOrB,EACPsB,OAAQtB,KAKX,yBAAKnB,UAAS,iBAAYwB,EAAU,IAAM,OACzC,wBAAIxB,UAAU,8BAA8BnB,GAC5C,uBAAGmB,UAAU,oBAAoBxB,Q,iDCrBjCkE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACC,oCACC,uBAAGjC,KAAMiC,EAASnC,OAAO,UAAUR,UAAU,kCAAiC,uBAAGA,UAAU,kBAA3F,SACA,uBAAGU,KAAI,UAAKiC,EAAL,uBAAmC3C,UAAU,6BAA4B,uBAAGA,UAAU,kBAA7F,oBAKG4C,EAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EACzB1B,mBAAS,IADgB,mBAC1CY,EAD0C,KACpCe,EADoC,KAG3CC,EAAgBC,sBAAW,sBAAC,4BAAArB,EAAA,+EAETC,IAAMC,IAAIe,GAFD,cAE1Bd,EAF0B,yBAGzBgB,EAAQhB,EAASC,OAHQ,gCAIfI,QAAQC,MAAM,KAAM7D,SAJL,yDAK/B,CAACqE,IAEJnB,qBAAU,WACTsB,MACE,CAACA,IAEJ,IAAME,EAAQ,GACVC,EAAc,EAClB,IAAK,IAAI7C,KAAS0B,EACjBkB,EAAME,KAAK9C,GACX6C,GAAenB,EAAK1B,GAGrB,OACC,yBAAKN,UAAU,QAAf,aACY,IAEEkD,EAAMG,OAChBH,EAAM9C,KAAI,SAAAkD,GAAQ,OACnB,uBAAG/C,IAAK+C,EAAUtD,UAAU,8BAA8BU,KAAMoC,EAAQ,oBAAgBQ,GAAY9C,OAAO,WACzG8C,EADF,IACa,IACXC,KAAKC,MAAOxB,EAAKsB,GAAYH,EAAe,KAAQ,GAFtD,SAKC,6BAMAM,EAAa,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYZ,EAA0B,EAA1BA,SAAUa,EAAgB,EAAhBA,UAAgB,EACvBvC,mBAAS,WADc,mBACpDwC,EADoD,KACxCC,EADwC,KAGrDC,EAAmBb,uBAAY,WACpC,IAAMc,EAAO,IAAIC,KAAKL,GAEhBM,GADU,IAAID,MACCE,UAAYH,EAAKG,UAChCC,EAAQZ,KAAKC,MAAMS,EAAO,IAAO,GAAK,IAE5C,GAAIE,EAAQ,GAAI,CACf,GAAIA,EAAQ,EAAG,OAAON,EAAc,YACpC,IAAIO,EAAwB,IAAVD,EAAc,OAAS,QACzC,OAAON,EAAc,GAAD,OAAIM,EAAME,WAAV,YAAwBD,EAAxB,SAEpB,IACME,EAAO,IAAIC,KAAKC,eAAe,QADrB,CAAEC,IAAK,UAAWC,MAAO,OAAQC,KAAM,YACAC,OAAOb,GAC9D,OAAOF,EAAc,MAAD,OAAOS,MAE1B,CAACX,IAMJ,OAJAjC,qBAAU,WACToC,MACE,CAACA,IAGH,uBAAG9D,UAAU,aACZ,uBAAGU,KAAMoC,EAAW,cAAetC,OAAO,UAAUR,UAAU,kCAC7D,0BAAMA,UAAU,4BACf,uBAAGA,UAAU,kBADd,SACuC,IACtC,0BAAMA,UAAU,oBAAoB0D,KAGtC,2BAAO1D,UAAU,cAAjB,WAAuC4D,KAK3BiB,EAtGK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,EAA2ED,EAA3EC,KAAMC,EAAqEF,EAArEE,YAAarC,EAAwDmC,EAAxDnC,QAASsC,EAA+CH,EAA/CG,iBAAkBpC,EAA6BiC,EAA7BjC,cAAec,EAAcmB,EAAdnB,UACrE,OACC,kBAACuB,EAAA,EAAD,CAAKC,GAAI,GACR,kBAACC,EAAA,EAAD,CAAMpF,UAAU,4CACf,kBAACoF,EAAA,EAAKC,KAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAMR,GAAQ,kBAAC,IAAD,MAA7B,KACA,kBAACK,EAAA,EAAKI,KAAN,KAAaR,EAAmBA,GAAe,kBAAC,IAAD,CAAUS,MAAO,IAArC,GAA3B,KACC9C,EAAU,kBAAC,EAAD,CAAaA,QAASA,IAAc,kBAAC,IAAD,CAAU8C,MAAO,IAChE,6BACC5C,EAAiB,kBAAC,EAAD,CAAUA,cAAeA,EAAeC,SAAUH,IAAgB,kBAAC,IAAD,CAAU8C,MAAO,IACpGX,EAAS,kBAAC,EAAD,CAAYpB,WAAYuB,EAAkBnC,SAAUH,EAASgB,UAAWA,IAAkB,kBAAC,IAAD,UC6B1F+B,EAvCE,SAAC,GAAkC,IAAhC7G,EAA+B,EAA/BA,QAAS8G,EAAsB,EAAtBA,SAAU1G,EAAY,EAAZA,MAC7BN,EAAG,uCAAmCgH,EAAnC,UADsC,EAGRvE,mBAAS,IAHD,mBAG3CwE,EAH2C,KAG5BC,EAH4B,KAK5CC,EAAa7C,sBAAW,sBAAC,oCAAArB,EAAA,6DAC1BmE,EAAW,GADe,kBAGNlE,IAAMC,IAAInD,GAHJ,OAGvBqH,EAHuB,qBAKH/G,GALG,IAKpB,IALoB,iBAKX8F,EALW,QAMVkB,EAAOD,EAAShE,KAAKkE,MAAK,SAAAD,GAAI,OAAIA,EAAKlB,OAASA,KACtDgB,EAAS3C,KAAK6C,IAFlB,uBAAyB,IALL,8BAU7BJ,EAAiBE,GAVY,kDAY7B3D,QAAQC,MAAM,KAAM7D,SAZS,0DAc5B,CAACG,EAAKM,IAMT,OAJAyC,qBAAU,WACToE,MACE,CAACA,IAGH,kBAACpG,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,WAAWI,UAAU,gBACxC,kBAACC,EAAA,EAAD,CAAWD,UAAU,IACpB,wBAAIA,UAAU,8BAA8BnB,GAC5C,kBAACsH,EAAA,EAAD,KACEP,EAAcxF,KAAI,SAACgG,EAAS9F,GAAV,OAClB,kBAAC,EAAD,CAAaC,IAAG,uBAAkBD,GAASV,GAAE,uBAAkBU,GAASwE,MAAOsB,WCpCxEC,EACO,qBAAXC,OAAyBC,kBAAkB7E,YCC9C8E,EAAY,qBAAOF,OAEzB,SAASG,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACpC,IAAKH,EAAW,MAAO,CAAEI,EAAG,EAAGC,EAAG,GAElC,IACMC,GADSJ,EAAUA,EAAQK,QAAUC,SAASC,MAC5BC,wBAExB,OAAOP,EACH,CAAEC,EAAGN,OAAOa,QAASN,EAAGP,OAAOc,SAC/B,CAAER,EAAGE,EAASjG,KAAMgG,EAAGC,EAASO,KAG/B,SAASC,EAAkBC,EAAQC,EAAMd,EAASC,EAAWc,GAClE,IAAMX,EAAWY,iBAAOjB,EAAkB,CAAEE,eAExCgB,EAAkB,KAEhBC,EAAW,WACf,IAAMC,EAAUpB,EAAkB,CAAEC,UAASC,cAC7CY,EAAO,CAAEO,QAAShB,EAASC,QAASc,YACpCf,EAASC,QAAUc,EACnBF,EAAkB,MAGpBtB,GAA0B,WACxB,GAAKG,EAAL,CAIA,IAAMuB,EAAe,WACfN,EACsB,OAApBE,IACFA,EAAkBK,WAAWJ,EAAUH,IAGzCG,KAMJ,OAFAtB,OAAO2B,iBAAiB,SAAUF,GAE3B,WACLzB,OAAO4B,oBAAoB,SAAUH,GACrCJ,GAAmBQ,aAAaR,OAEjCH,GAGLF,EAAkBc,aAAe,CAC/BZ,KAAM,GACNd,SAAS,EACTC,WAAW,EACXc,KAAM,MCvDR,IAiBeY,EAjBW,SAAC9I,GAAS,IAAD,EACGF,IAAM+B,SAAS,MADlB,mBAC1BkH,EAD0B,KACdC,EADc,KAcjC,OAZAlJ,IAAMqC,WAAU,WACd,IAAM8G,EAAgBjJ,EAAIwH,QACpB0B,EAAiB,IAAIC,gBAAe,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACfN,EAAcM,EAAMC,mBAIxB,OADAL,EAAeM,QAAQP,GAChB,WACLC,EAAeO,UAAUR,MAE1B,CAACjJ,IACG+I,G,gBC6BMW,EAtCI5J,IAAMC,YAAW,SAAC4J,EAAO3J,GAAS,IAAD,EACzB6B,oBAAS,GADgB,mBAC5C+H,EAD4C,KACrCC,EADqC,OAEPhI,mBAAS,GAFF,mBAE5CiI,EAF4C,KAE5BC,EAF4B,KAG7CC,EAAgBlK,IAAMqI,SACtB8B,EAAmBnB,EAAkBkB,GACrCE,EAAYD,EAAmBA,EAAiB1I,OAAS,EAgB/D,OAdAwG,GACC,YAA0B,EAAvBQ,QAAwB,IAAfD,EAAc,EAAdA,QACN2B,IACLJ,EAAUvB,EAAQhB,EAAItH,EAAIwH,QAAQ2C,UAAYF,EAAiB1I,OAAS,GACxEwI,EAAkBzB,EAAQhB,MAE3B,CAAC4C,IAGFpK,IAAMqC,WAAU,WACV8H,GACLJ,IAAUK,EAAYJ,GAAkB9J,EAAIwH,QAAQ2C,cAClD,CAACD,EAAWD,EAAkBjK,EAAK8J,IAGrC,kBAACM,EAAA,EAAD,CAAQpK,IAAKgK,EAAevJ,UAAS,sBAAkBmJ,EAAyB,qBAAjB,gBAAyCS,OAAO,MAC9G,kBAACD,EAAA,EAAOE,MAAR,CAAc7J,UAAU,QAAQU,KAA+B,UAA/D,WAA8EtC,EAASE,UAAvF,QACA,kBAACqL,EAAA,EAAOG,OAAR,CAAeC,gBAAc,mBAAmB/J,UAAU,WACzD,8BAAM,uBAAGH,MAAO,CAAEmK,MAAO,SAAWC,MAAM,iBAE3C,kBAACN,EAAA,EAAOO,SAAR,CAAiBtK,GAAG,oBACnB,kBAACuK,EAAA,EAAD,CAAKnK,UAAU,WACd,kBAACmK,EAAA,EAAIC,KAAL,CAAUpK,UAAU,gBAAgBU,KAA+B,aAAnE,SACA,kBAACyJ,EAAA,EAAIC,KAAL,CAAUpK,UAAU,gBAAgBU,KAA+B,cAAnE,YACA,kBAACyJ,EAAA,EAAIC,KAAL,CAAUpK,UAAU,gBAAgBU,KAA+B,YAAnE,iBCrBU2J,EAbC,SAAC,GAA0C,IAAxCxL,EAAuC,EAAvCA,QAASL,EAA8B,EAA9BA,QAAS8L,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3C,OACC,kBAAC7K,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,WAAWI,UAAU,OACxC,kBAACC,EAAA,EAAD,CAAWD,UAAU,eACpB,wBAAIA,UAAU,8BAA8BnB,GAChC,uBAAGmB,UAAU,QAAQxB,GACrB,qCAAU,uBAAGkC,KAAI,iBAAY4J,GAAS9J,OAAO,SAASC,IAAI,uBAAuB6J,IACjF,uCAAY,uBAAG5J,KAAK,+CAA+CF,OAAO,SAASC,IAAI,uBAAuB8J,OCFxHC,EAAOnL,IAAMC,YAAW,SAAC4J,EAAO3J,GACrC,OACC,oCACC,kBAAC,EAAD,CACCE,MAAK,UAAKrB,EAASE,UAAd,YAA2BF,EAASG,UACzCC,QAASJ,EAASI,QAClBgB,SAAUpB,EAASC,eACnBI,MAAOL,EAASK,MAChBc,IAAKA,IAEN,kBAAC,EAAD,CACCV,QAASD,EAAMC,QACfL,QAASI,EAAMJ,QACf0C,KAAMtC,EAAME,UACZqC,QAASvC,EAAMI,YAEhB,kBAAC,EAAD,CACCH,QAASI,EAAMJ,QACf8G,SAAU1G,EAAMC,eAChBD,MAAOA,EAAMA,QAEd,kBAAC,EAAD,CACCJ,QAASM,EACTX,QAASW,EACGmL,MAAOnL,EACPoL,QAASpL,QAiBVsL,EAXH,WACX,IAAMC,EAAWrL,IAAMqI,SAEvB,OACC,kBAAC,IAAD,CAAeiD,SAAmC,KACjD,kBAAC,EAAD,CAAQpL,IAAKmL,IACb,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,UAAW,kBAAM,kBAACN,EAAD,CAAMjL,IAAKmL,SClCjCnJ,QACW,cAA7B+E,OAAOyE,SAASC,UAEe,UAA7B1E,OAAOyE,SAASC,UAEhB1E,OAAOyE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASnE,SAASoE,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a90427a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pfp.d36bfbbd.png\";","const mainBody = {\n\tgradientColors: \"#4484ce, #50ceeb, #1ad7c0, #5ca5e0\",\n\tfirstName: \"Plebus\",\n\tlastName: \"Supremus\",\n\tmessage: \"A noob Python and TypeScript developer. \",\n\ticons: [\n\t\t{ image: \"fa-github\", url: \"https://github.com/PlebusSupremus1234/\" },\n\t\t{ image: \"fa-discord\", url: \"https://discord.com/users/453103897012338688\" },\n\t\t{ image: \"fa-youtube\", url: \"http://youtube.com/Person47\" }\n\t]\n};\n\nconst about = {\n\theading: \"About Me\",\n\timageLink: require(\"../editable-stuff/pfp.png\"),\n\timageSize: 375,\n\tmessage: \"My name is Plebus Supremus. I mainly code in Python, JavaScript, TypeScript and GoLang. In my free time, I like working on my personal projects and contributing to open source. \"\n};\n\nconst repos = {\n\theading: \"Favourite Projects\",\n\tgitHubUsername: \"PlebusSupremus1234\",\n\trepos: ['LemonScript', 'Visualized-Sorting', 'TicTacGo', 'closest-match']\n};\n\nconst contact = {\n\theading: \"Contact\",\n\tmessage: \"You can contact me either by email or on Discord.\",\n\temail: \"hl13851@gmail.com\",\n\tdiscord: \"Plebus Supremus#4334\"\n};\n\nexport { mainBody, about, repos, contact };","import React from \"react\";\nimport Typist from \"react-typist\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nconst MainBody = React.forwardRef(\n\t({ gradient, title, message, icons }, ref) => {\n\t\treturn (\n\t\t\t<Jumbotron\n\t\t\t\tfluid\n\t\t\t\tid=\"home\"\n\t\t\t\tstyle={{ background: `linear-gradient(136deg, ${gradient})`, backgroundSize: \"1200% 1200%\" }}\n\t\t\t\tclassName=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n\t\t\t>\n\t\t\t\t<div id=\"stars\"></div>\n\t\t\t\t<Container className=\"text-center\">\n\t\t\t\t\t<h1 style={{ fontFamily: ['Montserrat', 'sans-serif'], fontWeight: 500 }} ref={ref} className=\"display-2\">{title}</h1>\n\t\t\t\t\t<Typist style={{ fontFamily: ['Montserrat', 'sans-serif'], fontWeight: 500 }} className=\"lead typist h3\">{\" \"}{message}</Typist>\n\t\t\t\t\t<div className=\"p-5\">\n\t\t\t\t\t\t{icons.map((icon, index) => (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tkey={`social-icon-${index}`}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={icon.url}\n\t\t\t\t\t\t\t\taria-label={`My ${icon.image.split(\"-\")[1]}`}\n\t\t\t\t\t\t\t><i className={`fab ${icon.image} fa-3x socialicons`} /></a>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<i style={{ left: 0, bottom: 0 }} className=\"fa fa-chevron-down fa-4x position-absolute text-center w-100 mb-5\" />\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\t\t);\n\t}\n);\n\nexport default MainBody;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst pictureLinkRegex = new RegExp(/[(http(s)?):(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/);\n\nconst AboutMe = ({ heading, message, link, imgSize }) => {\n\tconst [profilePicUrl, setProfilePicUrl] = React.useState(\"\");\n\tconst [showPic, setShowPic] = React.useState(Boolean(link));\n\n\tReact.useEffect(() => {\n\t\tif (link && !pictureLinkRegex.test(link)) {\n\t\t\t(async () => {\n\t\t\t\tconst instaLink = \"https://www.instagram.com/\";\n\t\t\t\tconst instaQuery = \"/?__a=1\";\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await axios.get(instaLink + link + instaQuery);\n\t\t\t\t\tsetProfilePicUrl(response.data.graphql.user.profile_pic_url_hd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetShowPic(false);\n\t\t\t\t\tconsole.error(error.message);\n\t\t\t\t}\n\t\t\t})();\n\t\t} else {\n\t\t\tsetProfilePicUrl(link);\n\t\t}\n\t}, [link]);\n\n\treturn (\n\t\t<div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n\t\t\t<div className=\"container container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-5 d-none d-lg-block align-self-center\">\n\t\t\t\t\t\t{showPic && (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"border border-secondary rounded-circle\"\n\t\t\t\t\t\t\t\tsrc={profilePicUrl}\n\t\t\t\t\t\t\t\talt=\"profilepicture\"\n\t\t\t\t\t\t\t\twidth={imgSize}\n\t\t\t\t\t\t\t\theight={imgSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={`col-lg-${showPic ? \"7\" : \"12\"}`}>\n\t\t\t\t\t\t<h2 className=\"display-4 mb-5 text-center\">{heading}</h2>\n\t\t\t\t\t\t<p className=\"lead text-center\">{message}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n\tconst { name, description, svn_url, stargazers_count, languages_url, pushed_at } = value;\n\treturn (\n\t\t<Col md={6}>\n\t\t\t<Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n\t\t\t\t\t<Card.Text>{!description ? \"\" : description || <Skeleton count={3} />} </Card.Text>\n\t\t\t\t\t{svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n\t\t\t\t\t<hr />\n\t\t\t\t\t{languages_url ? (<Language languages_url={languages_url} repo_url={svn_url} />) : (<Skeleton count={3} />)}\n\t\t\t\t\t{value ? (<CardFooter star_count={stargazers_count} repo_url={svn_url} pushed_at={pushed_at} />) : (<Skeleton />)}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Col>\n\t);\n};\n\nconst CardButtons = ({ svn_url }) => {\n\treturn (\n\t\t<>\n\t\t\t<a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary mr-3\"><i className=\"fab fa-github\" /> Repo</a>\n\t\t\t<a href={`${svn_url}/archive/master.zip`} className=\"btn btn-outline-secondary\"><i className=\"fab fa-github\" /> Clone Project</a>\n\t\t</>\n\t);\n};\n\nconst Language = ({ languages_url, repo_url }) => {\n\tconst [data, setData] = useState([]);\n\n\tconst handleRequest = useCallback(async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(languages_url);\n\t\t\treturn setData(response.data);\n\t\t} catch (error) { console.error(error.message); }\n\t}, [languages_url]);\n\n\tuseEffect(() => {\n\t\thandleRequest();\n\t}, [handleRequest]);\n\n\tconst array = [];\n\tlet total_count = 0;\n\tfor (let index in data) {\n\t\tarray.push(index);\n\t\ttotal_count += data[index];\n\t}\n\n\treturn (\n\t\t<div className=\"pb-3\">\n\t\t\tLanguages:{\" \"}\n\t\t\t{\n                array.length\n\t\t\t\t? array.map(language => (\n\t\t\t\t\t<a key={language} className=\"badge badge-light card-link\" href={repo_url + `/search?l=${language}`} target=\" _blank\">\n\t\t\t\t\t\t{language}:{\" \"}\n\t\t\t\t\t\t{Math.trunc((data[language] / total_count) * 1000) / 10} %\n\t\t\t\t\t</a>\n\t\t\t\t))\n\t\t\t\t: \"code yet to be deployed.\"\n            }\n\t\t</div>\n\t);\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n\tconst [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n\tconst handleUpdatetime = useCallback(() => {\n\t\tconst date = new Date(pushed_at);\n\t\tconst nowdate = new Date();\n\t\tconst diff = nowdate.getTime() - date.getTime();\n\t\tconst hours = Math.trunc(diff / 1000 / 60 / 60);\n\n\t\tif (hours < 24) {\n\t\t\tif (hours < 1) return setUpdated_at(\"just now\");\n\t\t\tlet measurement = hours === 1 ? \"hour\" : \"hours\";\n\t\t\treturn setUpdated_at(`${hours.toString()} ${measurement} ago`);\n\t\t} else {\n\t\t\tconst options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n\t\t\tconst time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n\t\t\treturn setUpdated_at(`on ${time}`);\n\t\t}\n\t}, [pushed_at]);\n\n\tuseEffect(() => {\n\t\thandleUpdatetime();\n\t}, [handleUpdatetime]);\n\n\treturn (\n\t\t<p className=\"card-text\">\n\t\t\t<a href={repo_url + \"/stargazers\"} target=\" _blank\" className=\"text-dark text-decoration-none\">\n\t\t\t\t<span className=\"text-dark card-link mr-4\">\n\t\t\t\t\t<i className=\"fab fa-github\" /> Stars{\" \"}\n\t\t\t\t\t<span className=\"badge badge-dark\">{star_count}</span>\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t\t<small className=\"text-muted\">Updated {updated_at}</small>\n\t\t</p>\n\t);\n};\n\nexport default ProjectCard;","import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst Projects = ({ heading, username, repos }) => {\n    const url = `https://api.github.com/users/${username}/repos`;\n\n\tconst [projectsArray, setProjectsArray] = useState([]);\n\n\tconst fetchRepos = useCallback(async () => {\n\t\tlet repoList = [];\n\t\ttry {\n\t\t\tconst allRepos = await axios.get(url);\n\n            for (let name of repos) {\n                const repo = allRepos.data.find(repo => repo.name === name);\n                repoList.push(repo);\n            }\n\n\t\t\tsetProjectsArray(repoList);\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t}\n\t}, [url, repos]);\n\n\tuseEffect(() => {\n\t\tfetchRepos();\n\t}, [fetchRepos]);\n\n\treturn (\n\t\t<Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n\t\t\t<Container className=\"\">\n\t\t\t\t<h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t{projectsArray.map((project, index) => (\n\t\t\t\t\t\t<ProjectCard key={`project-card-${index}`} id={`project-card-${index}`} value={project}/>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Jumbotron>\n\t);\n};\n\nexport default Projects;","import { useLayoutEffect, useEffect } from \"react\"\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\n\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null,\n};\n","import React from \"react\";\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = React.useState(null);\n  React.useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useState } from \"react\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { mainBody } from \"../editable-stuff/config.js\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n\tconst [isTop, setIsTop] = useState(true);\n\tconst [scrollPosition, setScrollPosition] = useState(0);\n\tconst navbarMenuRef = React.useRef();\n\tconst navbarDimensions = useResizeObserver(navbarMenuRef);\n\tconst navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n\n\tuseScrollPosition(\n\t\t({ prevPos, currPos }) => {\n\t\t\tif (!navbarDimensions) return;\n\t\t\tsetIsTop((currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5) ? true : false);\n\t\t\tsetScrollPosition(currPos.y);\n\t\t},\n\t\t[navBottom]\n\t);\n\n\tReact.useEffect(() => {\n\t\tif (!navbarDimensions) return;\n\t\tsetIsTop((navBottom - scrollPosition >= ref.current.offsetTop) ? false : true);\n\t}, [navBottom, navbarDimensions, ref, scrollPosition]);\n\n\treturn (\n\t\t<Navbar ref={navbarMenuRef} className={` fixed-top  ${!isTop ? \"navbar-white\" : \"navbar-transparent\"}`} expand=\"lg\">\n\t\t\t<Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>{`<${mainBody.firstName} />`}</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\">\n\t\t\t\t<span><i style={{ color: 'white' }} class=\"fa fa-bars\"></i></span>\n\t\t\t</Navbar.Toggle>\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link className=\"nav-link lead\" href={process.env.PUBLIC_URL + \"/#aboutme\"}>About</Nav.Link>\n\t\t\t\t\t<Nav.Link className=\"nav-link lead\" href={process.env.PUBLIC_URL + \"/#projects\"}>Projects</Nav.Link>\n\t\t\t\t\t<Nav.Link className=\"nav-link lead\" href={process.env.PUBLIC_URL + \"/#skills\"}>Contact</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n});\n\nexport default Navigation;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nconst Contact = ({ heading, message, email, discord }) => {\n\treturn (\n\t\t<Jumbotron fluid id=\"projects\" className=\"m-0\">\n\t\t\t<Container className=\"text-center\">\n\t\t\t\t<h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n                <p className=\"lead\">{message}</p>\n                <p>Email: <a href={`mailto:${email}`} target=\"_blank\" rel=\"noopener noreferrer\">{email}</a></p>\n                <p>Discord: <a href=\"https://discord.com/users/453103897012338688\" target=\"_blank\" rel=\"noopener noreferrer\">{discord}</a></p>\n\t\t\t</Container>\n\t\t</Jumbotron>\n\t);\n};\n\nexport default Contact;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {  mainBody, about, repos, contact } from \"./editable-stuff/config.js\";\nimport MainBody from \"./components/MainBody\";\nimport AboutMe from \"./components/AboutMe\";\nimport Projects from \"./components/Projects\";\nimport Navbar from \"./components/Navbar\";\nimport Contact from \"./components/Contact\";\n\nconst Home = React.forwardRef((props, ref) => {\n\treturn (\n\t\t<>\n\t\t\t<MainBody\n\t\t\t\ttitle={`${mainBody.firstName} ${mainBody.lastName}`}\n\t\t\t\tmessage={mainBody.message}\n\t\t\t\tgradient={mainBody.gradientColors}\t\t\t\t\n\t\t\t\ticons={mainBody.icons}\n\t\t\t\tref={ref}\n\t\t\t/>\n\t\t\t<AboutMe\n\t\t\t\theading={about.heading}\n\t\t\t\tmessage={about.message}\n\t\t\t\tlink={about.imageLink}\n\t\t\t\timgSize={about.imageSize}\n\t\t\t/>\n\t\t\t<Projects\n\t\t\t\theading={repos.heading}\n\t\t\t\tusername={repos.gitHubUsername}\n\t\t\t\trepos={repos.repos}\n\t\t\t/>\n\t\t\t<Contact\n\t\t\t\theading={contact.heading}\n\t\t\t\tmessage={contact.message}\n                email={contact.email}\n                discord={contact.discord}\n\t\t\t/>\n\t\t</>\n\t);\n});\n\nconst App = () => {\n\tconst titleRef = React.useRef();\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n\t\t\t<Navbar ref={titleRef} />\n\t\t\t<Route path=\"/\" exact component={() => <Home ref={titleRef} />} />\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}